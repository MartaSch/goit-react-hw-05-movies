{"version":3,"file":"static/js/302.34f0ee37.chunk.js","mappings":"+PAGaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAkCD,EAAlCC,UAAWC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,aACzB,OACE,+BACE,yBACE,2BACE,gBAAKC,IAAG,UAPD,oCAOC,OAAgBD,GAAgBE,IAAKH,KAC7C,uBAAIA,KACJ,uCAAeD,WAKxB,ECZYK,EAAU,WACrB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAqBF,EAAAA,EAAAA,UAAS,MAArBI,GAAT,eAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAECC,EAAAA,EAAAA,IAAmBL,GAFpB,OAEZT,EAFY,OAGlBQ,EAAQR,GAHU,gDAKlBW,EAAS,KAAMI,SALG,yDAAH,qDAQnBF,GACD,GAAE,CAACJ,KAGF,+BACE,SAACV,EAAD,CAAUC,KAAMA,KAGrB,C,+LCxBDgB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EACM,sBADNA,EAEI,gBAFJA,EAGK,SAHLA,EAIK,WAJLA,EAKK,WAGLC,EAAmB,mCAAG,sGACHH,EAAAA,EAAAA,IAAA,UAAaE,EAAb,oBAAuCD,IADpC,uBAClBG,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qDAKnBC,EAAmB,mCAAG,WAAMC,GAAN,yFACHP,EAAAA,EAAAA,IAAA,UAClBE,EADkB,oBACMD,EADN,kBACuBM,IAFpB,uBAClBH,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,SAJc,2CAAH,sDAOnBG,EAAkB,mCAAG,WAAMf,GAAN,yFACFO,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACDT,EADC,oBACkBQ,IAFhB,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOlBN,EAAkB,mCAAG,WAAML,GAAN,yFACFO,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACDT,EADC,YACUS,EADV,oBACmCD,IAFjC,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOlBK,EAAkB,mCAAG,WAAMhB,GAAN,yFACFO,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACDT,EADC,YACUS,EADV,oBACmCD,IAFjC,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD","sources":["components/CastCard.jsx","components/Cast.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500/';\nexport const CastCard = ({ cast }) => {\n  const { character, name, profile_path } = cast;\n  return (\n    <>\n      <ul>\n        <li>\n          <img src={`${IMAGEURL}${profile_path}`} alt={name} />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </li>\n      </ul>\n    </>\n  );\n};\nCastCard.propTypes = {\n  cast: PropTypes.shape({\n    profile_path: PropTypes.string.isRequired,\n    character: PropTypes.string,\n    name: PropTypes.string,\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCreditsMovies } from 'services/api';\nimport { CastCard } from './CastCard';\nexport const Reviews = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    const getMoviesCast = async () => {\n      try {\n        const cast = await fetchCreditsMovies(movieId);\n        setCast(cast);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getMoviesCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <CastCard cast={cast} />\n    </>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3bffe50dfda579cb925403e66a2c7938';\nconst PARAM = {\n  trending: '/trending/movie/day',\n  search: '/search/movie',\n  details: '/movie',\n  credits: '/credits',\n  reviews: '/reviews',\n};\n\nconst fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${PARAM.trending}?api_key=${API_KEY}`);\n  return data.results;\n};\n\nconst fetchSerchingMovies = async query => {\n  const { data } = await axios.get(\n    `${PARAM.search}?api_key=${API_KEY}&query=${query}`\n  );\n  return data.results;\n};\n\nconst fetchDetailsMovies = async movieId => {\n  const { data } = await axios.get(\n    `${PARAM.details}/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst fetchCreditsMovies = async movieId => {\n  const { data } = await axios.get(\n    `${PARAM.details}/${movieId}/${PARAM.credits}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst fetchReviewsMovies = async movieId => {\n  const { data } = await axios.get(\n    `${PARAM.details}/${movieId}/${PARAM.reviews}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchSerchingMovies,\n  fetchDetailsMovies,\n  fetchCreditsMovies,\n  fetchReviewsMovies,\n};\n"],"names":["CastCard","cast","character","name","profile_path","src","alt","Reviews","useState","setCast","movieId","useParams","setError","useEffect","getMoviesCast","fetchCreditsMovies","message","axios","API_KEY","PARAM","fetchTrendingMovies","data","results","fetchSerchingMovies","query","fetchDetailsMovies","fetchReviewsMovies"],"sourceRoot":""}