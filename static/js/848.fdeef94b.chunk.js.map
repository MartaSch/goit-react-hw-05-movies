{"version":3,"file":"static/js/848.fdeef94b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieElements/MovieCards.module.css?ed24","components/MovieElements/MovieCards.jsx","webpack://react-homework-template/./src/pages/Movies/MoviesDetails.module.css?e450","pages/Movies/MoviesDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieCardContainer\":\"MovieCards_MovieCardContainer__E63M3\",\"Poster\":\"MovieCards_Poster__QWrmD\",\"MovieYearTitle\":\"MovieCards_MovieYearTitle__4trd0\",\"MovieInformation\":\"MovieCards_MovieInformation__ysmGQ\",\"UserScore\":\"MovieCards_UserScore__JXBax\",\"Title\":\"MovieCards_Title__W4-Cr\",\"Text\":\"MovieCards_Text__qyTW9\",\"List\":\"MovieCards_List__ST7DO\"};","import PropTypes from 'prop-types';\nimport css from './MovieCards.module.css';\nexport const MovieCard = ({ moviesDetails }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    moviesDetails;\n  const releaseDate = new Date(release_date);\n  const releaseYear = releaseDate.getFullYear();\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n\n  return (\n    <section className={css.MovieCardContainer}>\n      <img\n        className={css.Poster}\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : 'no poster'\n        }\n        alt=\"{title}\"\n      />\n      <div className={css.MovieInformation}>\n        <h3 className={css.MovieYearTitle}>\n          {title} ({releaseYear})\n        </h3>\n        <p className={css.UserScore}>User score: {userScore}%</p>\n        <h5 className={css.Title}>Overview:</h5>\n        <p className={css.Text}>{overview}</p>\n        <h5 className={css.Title}>Genres:</h5>\n        <ul className={css.List}>\n          <li className={css.Text}>\n            {genres?.map(({ name }) => name).join(', ')}\n          </li>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nMovieCard.propTypes = {\n  movieDetails: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.number,\n    vote_average: PropTypes.number.isRequired,\n    userScore: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"MoviesDetailsContainer\":\"MoviesDetails_MoviesDetailsContainer__LD-C9\",\"ButtonBack\":\"MoviesDetails_ButtonBack__zaJGa\",\"LinkList\":\"MoviesDetails_LinkList__b0u1a\",\"LinkReviewsCastItem\":\"MoviesDetails_LinkReviewsCastItem__azmPa\",\"LinkReviewsCast\":\"MoviesDetails_LinkReviewsCast__e7GMg\"};","import { Suspense, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate, Outlet, NavLink, useLocation } from 'react-router-dom';\nimport { fetchDetailsMovies } from 'services/api';\nimport { MovieCard } from '../../components/MovieElements/MovieCards';\nimport css from './MoviesDetails.module.css';\nconst MoviesDetails = () => {\n  const [moviesDetails, setMoviesDetails] = useState([]);\n  const { id } = useParams();\n  const [, setError] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  // const back = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    const getMoviesDetails = async () => {\n      try {\n        const moviesDetails = await fetchDetailsMovies(id);\n        setMoviesDetails(moviesDetails);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getMoviesDetails();\n  }, [id]);\n\n  const handleBackButton = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className={css.MoviesDetailsContainer}>\n      <button\n        className={css.ButtonBack}\n        type=\"button\"\n        onClick={handleBackButton}\n      >\n        Go back\n      </button>\n      <MovieCard moviesDetails={moviesDetails} />\n      <ul className={css.LinkList}>\n        <li className={css.LinkReviewsCastItem}>\n          <NavLink\n            className={css.LinkReviewsCast}\n            state={location.state}\n            to=\"reviews\"\n          >\n            Reviews\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            className={css.LinkReviewsCast}\n            state={location.state}\n            to=\"cast\"\n          >\n            Cast\n          </NavLink>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3bffe50dfda579cb925403e66a2c7938';\nconst PARAM = {\n  trending: '/trending/movie/day',\n  search: '/search/movie',\n  details: '/movie',\n  credits: '/credits',\n  reviews: '/reviews',\n  genre: '/genre/movie/list',\n};\n\nconst fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${PARAM.trending}?api_key=${API_KEY}`);\n  return data.results;\n};\n\nconst fetchSerchingMovies = async query => {\n  const { data } = await axios.get(\n    `${PARAM.search}?api_key=${API_KEY}&query=${query}`\n  );\n  return data.results;\n};\n\nconst fetchDetailsMovies = async id => {\n  const { data } = await axios.get(`${PARAM.details}/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nconst fetchCreditsMovies = async id => {\n  const { data } = await axios.get(\n    `${PARAM.details}/${id}${PARAM.credits}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst fetchReviewsMovies = async id => {\n  const { data } = await axios.get(\n    `${PARAM.details}/${id}${PARAM.reviews}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchSerchingMovies,\n  fetchDetailsMovies,\n  fetchCreditsMovies,\n  fetchReviewsMovies,\n};\n"],"names":["MovieCard","moviesDetails","poster_path","title","release_date","vote_average","overview","genres","releaseYear","Date","getFullYear","userScore","Math","round","Number","className","css","src","alt","map","name","join","useState","setMoviesDetails","id","useParams","setError","location","useLocation","navigate","useNavigate","useEffect","getMoviesDetails","fetchDetailsMovies","message","type","onClick","state","to","Suspense","fallback","axios","API_KEY","PARAM","fetchTrendingMovies","data","results","fetchSerchingMovies","query","fetchCreditsMovies","fetchReviewsMovies"],"sourceRoot":""}