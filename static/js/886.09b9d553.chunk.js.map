{"version":3,"file":"static/js/886.09b9d553.chunk.js","mappings":"6QAGaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAExBC,EAMED,EANFC,YACAC,EAKEF,EALFE,MACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,UAEIC,EAAcJ,EAEdK,EAAYC,KAAKC,MAA8B,IAAvBC,OAAOP,GAAuB,IAC5D,OACE,4BACE,gBAAKQ,IAAG,UAhBG,oCAgBH,OAAgBX,GAAeY,IAAI,aAC3C,0BACGX,EADH,IACWK,MAEX,wCAAgBC,EAAhB,QACA,uCAEE,uBAAIH,QAEN,qCAEE,uBAAIC,SAIX,EC3BYQ,EAAgB,WAC3B,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAqBH,EAAAA,EAAAA,UAAS,MAArBK,GAAT,eACMC,GAAWC,EAAAA,EAAAA,MAYjB,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAEAC,EAAAA,EAAAA,IAAmBP,GAFnB,OAEfF,EAFe,OAGrBC,EAAUD,GAHW,gDAKrBI,EAAS,KAAMM,SALM,yDAAH,qDAQtBF,GACD,GAAE,CAACN,KAEF,4BACE,SAACnB,EAAD,CAAWC,MAAOgB,KAClB,SAAC,KAAD,CAAMW,GAAG,UAAUC,MAAOP,EAASO,MAAnC,sBAGA,SAAC,KAAD,CAAMD,GAAG,OAAOC,MAAOP,EAASO,MAAhC,oBAKL,C,+LC9BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EACM,sBADNA,EAEI,gBAFJA,EAGK,SAHLA,EAIK,WAJLA,EAKK,WAGLC,EAAmB,mCAAG,sGACHH,EAAAA,EAAAA,IAAA,UAAaE,EAAb,oBAAuCD,IADpC,uBAClBG,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qDAKnBC,EAAmB,mCAAG,WAAMC,GAAN,yFACHP,EAAAA,EAAAA,IAAA,UAClBE,EADkB,oBACMD,EADN,kBACuBM,IAFpB,uBAClBH,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,SAJc,2CAAH,sDAOnBT,EAAkB,mCAAG,WAAMP,GAAN,yFACFW,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACDb,EADC,oBACkBY,IAFhB,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOlBI,EAAkB,mCAAG,WAAMnB,GAAN,yFACFW,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACDb,EADC,YACUa,EADV,oBACmCD,IAFjC,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,sDAOlBK,EAAkB,mCAAG,WAAMpB,GAAN,yFACFW,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACDb,EADC,YACUa,EADV,oBACmCD,IAFjC,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qD","sources":["components/MovieCards.jsx","components/MoviesDetails.jsx","services/api.js"],"sourcesContent":["import { PropTypes } from 'prop-types';\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const MovieCard = ({ movie }) => {\n  const {\n    poster_path,\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genre_ids,\n  } = movie;\n  const releaseDate = release_date;\n  //const movieGenres = genres.map(item => item.name).join(' ');\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n  return (\n    <div>\n      <img src={`${IMAGEURL}${poster_path}`} alt=\"{title}\" />\n      <h3>\n        {title} {releaseDate}\n      </h3>\n      <p>User score: {userScore}%</p>\n      <h5>\n        Overview:\n        <p>{overview}</p>\n      </h5>\n      <h5>\n        Genres:\n        <p>{genre_ids}</p>\n      </h5>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useParams, Link } from 'react-router-dom';\nimport { fetchDetailsMovies } from 'services/api';\nimport { MovieCard } from './MovieCards';\n\nexport const MoviesDetails = () => {\n  const [movies, setMovies] = useState([]);\n  const { movieId } = useParams();\n  const [, setError] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    const getMoviesDetails = async () => {\n      try {\n        const movies = await fetchDetailsMovies(movieId);\n        setMovies(movies);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getMoviesDetails();\n  }, [movieId]);\n  return (\n    <div>\n      <MovieCard movie={movies} />\n      <Link to=\"Reviews\" state={location.state}>\n        Reviews\n      </Link>\n      <Link to=\"Cast\" state={location.state}>\n        Cast\n      </Link>\n    </div>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3bffe50dfda579cb925403e66a2c7938';\nconst PARAM = {\n  trending: '/trending/movie/day',\n  search: '/search/movie',\n  details: '/movie',\n  credits: '/credits',\n  reviews: '/reviews',\n};\n\nconst fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${PARAM.trending}?api_key=${API_KEY}`);\n  return data.results;\n};\n\nconst fetchSerchingMovies = async query => {\n  const { data } = await axios.get(\n    `${PARAM.search}?api_key=${API_KEY}&query=${query}`\n  );\n  return data.results;\n};\n\nconst fetchDetailsMovies = async movieId => {\n  const { data } = await axios.get(\n    `${PARAM.details}/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst fetchCreditsMovies = async movieId => {\n  const { data } = await axios.get(\n    `${PARAM.details}/${movieId}/${PARAM.credits}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst fetchReviewsMovies = async movieId => {\n  const { data } = await axios.get(\n    `${PARAM.details}/${movieId}/${PARAM.reviews}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchSerchingMovies,\n  fetchDetailsMovies,\n  fetchCreditsMovies,\n  fetchReviewsMovies,\n};\n"],"names":["MovieCard","movie","poster_path","title","release_date","vote_average","overview","genre_ids","releaseDate","userScore","Math","round","Number","src","alt","MoviesDetails","useState","movies","setMovies","movieId","useParams","setError","location","useLocation","useEffect","getMoviesDetails","fetchDetailsMovies","message","to","state","axios","API_KEY","PARAM","fetchTrendingMovies","data","results","fetchSerchingMovies","query","fetchCreditsMovies","fetchReviewsMovies"],"sourceRoot":""}